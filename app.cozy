
express = require('express')
stylus = require('stylus')
nib = require('nib')
util = require('util')
redis = require('redis')
natural = require('natural')
stopwords = require('./lib/stopwords.js')

tokenizer = new natural.WordTokenizer!
regex_tokenizer = new natural.RegexpTokenizer({pattern: /\s/})
TfIdf = natural.TfIdf

cli = require('cli')

#options = cli.parse
#    db_path: ['d', 'SQLite database path', 'string']

redis_client = redis.createClient!

app = express()

server = require('http').createServer(app)
io = require('socket.io').listen(server)

socket_clients = []

(socket) <- io.sockets.on('connection', _)
    socket_clients.push(socket)
 
tfidf = new TfIdf()
messages = []
() <- setInterval(_, 30000)
    messages = []
    tfidf = new TfIdf()

(channel, message) <- redis_client.on("message", _)

    parts_msg = message.split("\t")

    console.log("redis client channel " + channel + ": " + parts_msg[0] + ": " + parts_msg[2])

    tokens = regex_tokenizer.tokenize(parts_msg[1].toLowerCase!)
    tokens = stopwords.stripStopWords(tokens)

    #tfidf.addDocument(parts_msg[1].toLowerCase!)
   
    #token_scores = [] 
    #(token) <- tokens.forEach!
    #    token_scores.push({token: token, score: tfidf.tfidf(token, tfidf.documents.length - 1)})

    for socket in socket_clients
        socket.emit('tweet', [parts_msg[0].split(':'), tokens, parts_msg[2]])


compile = (str, path) ->
    return stylus(str).set('filename', path).use(nib())

app.set('views', __dirname + '/views')
app.set('view engine', 'jade')
app.set('view options', { layout: false })
app.use(express.logger())
app.use(express.bodyParser())
app.use(express.cookieParser())
app.use(express.session(secret: "tweetheapmap"))

app.use(stylus.middleware { src: __dirname + '/public', compile: compile})
app.use(express.static(__dirname + '/public'))

(error, req, res, next) <- app.use!
    console.log(error)
    res.send(500, {error: util.inspect(error)})

(req, res) <- app.get('/', _)

    res.render('index')        
    
server.listen(8080)
redis_client.subscribe('tweets')

