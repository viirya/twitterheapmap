// Generated by CozyScript 0.1.1
(function() {
  var TfIdf, app, cli, compile, express, io, messages, natural, nib, redis, redis_client, regex_tokenizer, server, socket_clients, stopwords, stylus, tfidf, tokenizer, util;

  express = require('express');

  stylus = require('stylus');

  nib = require('nib');

  util = require('util');

  redis = require('redis');

  natural = require('natural');

  stopwords = require('./lib/stopwords.js');

  tokenizer = new natural.WordTokenizer();

  regex_tokenizer = new natural.RegexpTokenizer({
    pattern: /\s/
  });

  TfIdf = natural.TfIdf;

  cli = require('cli');

  redis_client = redis.createClient();

  app = express();

  server = require('http').createServer(app);

  io = require('socket.io').listen(server);

  socket_clients = [];

  io.sockets.on('connection', function(socket) {
    return socket_clients.push(socket);
  });

  tfidf = new TfIdf();

  messages = [];

  setInterval(function() {
    messages = [];
    return tfidf = new TfIdf();
  }, 30000);

  redis_client.on("message", function(channel, message) {
    var parts_msg, socket, tokens, _i, _len, _results;
    parts_msg = message.split("\t");
    console.log("redis client channel " + channel + ": " + parts_msg[0] + ": " + parts_msg[2]);
    tokens = regex_tokenizer.tokenize(parts_msg[1].toLowerCase());
    tokens = stopwords.stripStopWords(tokens);
    _results = [];
    for (_i = 0, _len = socket_clients.length; _i < _len; _i++) {
      socket = socket_clients[_i];
      _results.push(socket.emit('tweet', [parts_msg[0].split(':'), tokens, parts_msg[2]]));
    }
    return _results;
  });

  compile = function(str, path) {
    return stylus(str).set('filename', path).use(nib());
  };

  app.set('views', __dirname + '/views');

  app.set('view engine', 'jade');

  app.set('view options', {
    layout: false
  });

  app.use(express.logger());

  app.use(express.bodyParser());

  app.use(express.cookieParser());

  app.use(express.session({
    secret: "tweetheapmap"
  }));

  app.use(stylus.middleware({
    src: __dirname + '/public',
    compile: compile
  }));

  app.use(express["static"](__dirname + '/public'));

  app.use(function(error, req, res, next) {
    console.log(error);
    return res.send(500, {
      error: util.inspect(error)
    });
  });

  app.get('/', function(req, res) {
    return res.render('index');
  });

  server.listen(8080);

  redis_client.subscribe('tweets');

}).call(this);
